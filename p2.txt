/* Euler project problem #2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms." */

var fibArray = [1,2];
var mySum = 0;


function makeFibArray (upperBound) {
var current = fibArray.length - 1;
var currentMinusOne = fibArray.length - 2;
var value = fibArray[current] + fibArray[currentMinusOne];
 while (value <= upperBound){
 	fibArray.push(value);
	current = fibArray.length - 1;
	currentMinusOne = fibArray.length - 2;
	value = fibArray[current] + fibArray[currentMinusOne];
}
return fibArray;
}
function evenFibSum(){
for (var i = 0; i<fibArray.length; i++){
if (fibArray[i]%2==0){
mySum+=fibArray[i];
}
}
return mySum;
}
fibArray = makeFibArray(4000000);
console.log(fibArray);
console.log(evenFibSum());

